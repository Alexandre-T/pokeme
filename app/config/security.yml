# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    #https://sonata-project.org/bundles/user/2-2/doc/reference/installation.html
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    acl:
        connection: default

    role_hierarchy:
        #ACL des rôles
        #Les commentaires en dessous ne marchent pas...
        #Rappel : Guest = View + list
        #Rappel : Staff = edit + create
        #Rappel : editor = delete
        #Rappel : admin = View + list + edit + create + delete

        #Rôles fonctionnels
        ROLE_FONCTIONNEL_USER_GUEST:
          - ROLE_SONATA_USER_ADMIN_USER_LIST
          - ROLE_SONATA_USER_ADMIN_USER_VIEW
        ROLE_FONCTIONNEL_USER_ADMIN:
          - ROLE_SONATA_USER_ADMIN_USER_LIST
          - ROLE_SONATA_USER_ADMIN_USER_CREATE
          - ROLE_SONATA_USER_ADMIN_USER_VIEW
          - ROLE_SONATA_USER_ADMIN_USER_DELETE
          - ROLE_SONATA_USER_ADMIN_USER_EDIT
        ROLE_FONCTIONNEL_GROUP_ADMIN:
          - ROLE_SONATA_USER_ADMIN_GROUP_LIST
          - ROLE_SONATA_USER_ADMIN_GROUP_CREATE
          - ROLE_SONATA_USER_ADMIN_GROUP_VIEW
          - ROLE_SONATA_USER_ADMIN_GROUP_DELETE
          - ROLE_SONATA_USER_ADMIN_GROUP_EDIT
        ROLE_FONCTIONNEL_BAN_GUEST:
          - ROLE_JDRADMIN_ADMIN_SETTINGS_BANNEDIP_LIST
          - ROLE_JDRADMIN_ADMIN_SETTINGS_BANNEDIP_VIEW
        ROLE_FONCTIONNEL_BAN_STAFF:
          - ROLE_JDRADMIN_ADMIN_SETTINGS_BANNEDIP_LIST
          - ROLE_JDRADMIN_ADMIN_SETTINGS_BANNEDIP_VIEW
          - ROLE_JDRADMIN_ADMIN_SETTINGS_BANNEDIP_CREATE
          - ROLE_JDRADMIN_ADMIN_SETTINGS_BANNEDIP_DELETE
          - ROLE_JDRADMIN_ADMIN_SETTINGS_BANNEDIP_EDIT
        ROLE_FONCTIONNEL_CLASSIFICATION_GUEST:
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CATEGORY_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CATEGORY_VIEW
          - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_VIEW
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_VIEW
          - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_VIEW
        ROLE_FONCTIONNEL_CLASSIFICATION_STAFF:
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CATEGORY_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CATEGORY_VIEW
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CATEGORY_EDIT
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CATEGORY_CREATE
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CATEGORY_DELETE
          - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_VIEW
          - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_EDIT
          - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_CREATE
          - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_DELETE
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_VIEW
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_EDIT
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_CREATE
          - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_DELETE
          - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_LIST
          - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_VIEW
          - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_EDIT
          - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_CREATE
          - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_DELETE
        ROLE_FONCTIONNEL_MEDIA_GUEST:
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_LIST
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_VIEW
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_LIST
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_VIEW
        ROLE_FONCTIONNEL_MEDIA_STAFF:
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_LIST
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_VIEW
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_EDIT
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_CREATE
          - ROLE_SONATA_MEDIA_ADMIN_MEDIA_DELETE
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_LIST
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_VIEW
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_EDIT
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_CREATE
          - ROLE_SONATA_MEDIA_ADMIN_GALLERY_DELETE
        #Roles métiers
        ROLE_ADMIN:
          - ROLE_USER #HERITAGE DU ROLE METIER
          - ROLE_SONATA_ADMIN #ACCES A L'ADMINISTRATION
          - ROLE_FONCTIONNEL_GROUP_ADMIN
          - ROLE_FONCTIONNEL_USER_ADMIN
          - ROLE_FONCTIONNEL_CLASSIFICATION_STAFF
          - ROLE_FONCTIONNEL_MEDIA_STAFF
        ROLE_SUPER_ADMIN:
          - ROLE_ADMIN
          - ROLE_ALLOWED_TO_SWITCH

    # set access_strategy to unanimous, else you may have unexpected behaviors
    # https://sonata-project.org/bundles/admin/master/doc/reference/security.html#id1
    access_decision_manager:
        strategy: unanimous

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
                    id: fos_user.user_manager

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true
        # -> end custom configuration
        main:
            pattern:            .*
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
            anonymous:          true
            logout:             true


    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
